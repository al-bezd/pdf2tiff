# Generated by Django 3.1.8 on 2021-04-07 14:32

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0060_fix_workflow_unique_constraint'),
        ('wagtailimages', '0023_add_choose_permissions'),
        ('home', '0002_create_homepage'),
    ]

    operations = [
        migrations.CreateModel(
            name='ElectroKadrPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('keywords', models.TextField(blank=True, help_text='Ключевые слова для индексации поисковыми роботами', null=True, verbose_name='keywords')),
                ('body', wagtail.core.fields.StreamField([('Heading', wagtail.core.blocks.CharBlock(form_classname='full title')), ('Text', wagtail.core.blocks.RichTextBlock()), ('img', wagtail.images.blocks.ImageChooserBlock()), ('HTML', wagtail.core.blocks.RawHTMLBlock()), ('docs', wagtail.documents.blocks.DocumentChooserBlock())])),
            ],
            options={
                'verbose_name': 'Электронный кадровик',
                'verbose_name_plural': 'Электронный кадровик',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SimplePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('keywords', models.TextField(blank=True, help_text='Ключевые слова для индексации поисковыми роботами', null=True, verbose_name='keywords')),
                ('body', wagtail.core.fields.StreamField([('Heading', wagtail.core.blocks.CharBlock(form_classname='full title')), ('Text', wagtail.core.blocks.RichTextBlock()), ('img', wagtail.images.blocks.ImageChooserBlock()), ('HTML', wagtail.core.blocks.RawHTMLBlock()), ('docs', wagtail.documents.blocks.DocumentChooserBlock())])),
            ],
            options={
                'verbose_name': 'Обычная страница',
                'verbose_name_plural': 'Обычная страница',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AlterModelOptions(
            name='homepage',
            options={'verbose_name': 'Главная страница', 'verbose_name_plural': 'Главные страницы'},
        ),
        migrations.AddField(
            model_name='homepage',
            name='converter_desc',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Конвертер (описание)'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='converter_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='converter_title',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Конвертер (заголовок)'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='keywords',
            field=models.TextField(blank=True, help_text='Ключевые слова для индексации поисковыми роботами', null=True, verbose_name='keywords'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='onas_desc',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='О нас (описание)'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='onas_image1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.image', verbose_name='О нас (Изображение1)'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='onas_image2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.image', verbose_name='О нас (Изображение2)'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='onas_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='О нас (Ссылка на страницу)'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='onas_title',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='О нас (заголовок)'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='partners_desc',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Партнеры (описание)'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='partners_title',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Партнеры (заголовок)'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='yt_videos',
            field=wagtail.core.fields.StreamField([('YouTubeVideo', wagtail.core.blocks.RawHTMLBlock())], blank=True, null=True, verbose_name='видео с YouTube'),
        ),
        migrations.CreateModel(
            name='SocialMediaSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('youtube', models.URLField(blank=True, help_text='youtube URL', null=True)),
                ('fb', models.URLField(blank=True, help_text='fb URL', null=True)),
                ('telegram', models.URLField(blank=True, help_text='telegram URL', null=True)),
                ('instagram', models.URLField(blank=True, help_text='instagram URL', null=True)),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
            ],
            options={
                'verbose_name': 'Социальные сети',
                'verbose_name_plural': 'Социальные сети',
            },
        ),
        migrations.CreateModel(
            name='SocialItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
                ('link', models.URLField(blank=True, help_text='URL', null=True, verbose_name='Ссылка')),
                ('text', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Текст')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='socialitem', to='home.homepage')),
            ],
            options={
                'verbose_name': 'Ссылка на соц. сеть',
                'verbose_name_plural': 'Ссылка на соц. сети',
            },
        ),
        migrations.CreateModel(
            name='PhotoMainPageSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заголовок')),
                ('breadcrumb_photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Изображение для "хлебные крошки"')),
                ('contact_photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Изображение для раздела "Связаться с нами"')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Основной логотип')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
            ],
            options={
                'verbose_name': 'Фотографии главной страницы',
                'verbose_name_plural': 'Фотографии главной страницы',
            },
        ),
        migrations.CreateModel(
            name='PartnersLogo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заголовок')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Изображение')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='PartnersLogo', to='home.homepage')),
            ],
            options={
                'verbose_name': 'Партнер',
                'verbose_name_plural': 'Партнеры',
            },
        ),
        migrations.CreateModel(
            name='Diploms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заголовок')),
                ('desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Скрин диплома')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='diploms', to='home.homepage')),
            ],
            options={
                'verbose_name': 'Диплом',
                'verbose_name_plural': 'Дипломы',
            },
        ),
        migrations.CreateModel(
            name='ContactSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tel1', models.CharField(blank=True, help_text='Телефон №1', max_length=150, null=True, verbose_name='Телефон №1')),
                ('tel2', models.CharField(blank=True, help_text='Телефон №2', max_length=150, null=True, verbose_name='Телефон №2')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
            ],
            options={
                'verbose_name': 'Контакты',
                'verbose_name_plural': 'Контакты',
            },
        ),
        migrations.CreateModel(
            name='BannerItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заголовок')),
                ('desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.image', verbose_name='Изображение')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='banner_item', to='home.homepage')),
                ('select_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='Страница')),
            ],
            options={
                'verbose_name': 'Окно баннера',
                'verbose_name_plural': 'Окна баннера',
            },
        ),
    ]
